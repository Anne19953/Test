发送方引起的粘包是由TCP协议本身造成的，TCP为提高传输效率，发送方往往要收集到足够多的数据后才发送一个TCP段。
若连续几次需要send的数据都很少，通常TCP会根据优化算法把这些数据合成一个TCP段后一次发送出去，这样接收方也会收到粘包数据。

发送端：
需要等缓冲区满才发送出去，造成粘包（发送数据时间间隔很短，数据很小，会合到一起，产生粘包）
接受端：
不及时接收缓冲区的包，造成多个包接收（发送端发送了一段数据，接收端只收了一小部分，接受端下次再收的时候还是从缓冲区拿上次遗留的数据，产生粘包）

我们知道tcp的协议的优点是数据不会丢，没有收完包，下次接收，会继续上次继续接收，己端总是在收到ack时才会清除缓冲区内容。
数据是可靠的，但是这种模式会产生粘包现象。

解决方案：
简单来说：发送端在发送数据前，把自己将要发送的字节流总大小让接收端知晓，然后接收端来一个死循环接收完所有数据。
高级一点：为字节流加上自定义固定长度报头，报头中包含字节流长度，然后一次send到对端，对端在接收时，先从缓存中取出定长的报头，然后再取真实数据。
